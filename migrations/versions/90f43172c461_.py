"""empty message

Revision ID: 90f43172c461
Revises: 
Create Date: 2022-03-08 18:08:51.059877

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '90f43172c461'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('authority', sa.String(length=64), nullable=False),
    sa.Column('auth_id', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('orcid', sa.String(length=64), nullable=True),
    sa.Column('reputation', sa.Integer(), nullable=True),
    sa.Column('enotify', sa.Boolean(), nullable=True),
    sa.Column('super_user', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('auth_id')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('category', sa.Text(), nullable=True),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('terms',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ark_id', sa.Integer(), autoincrement=True, nullable=True),
    sa.Column('shoulder', sa.String(length=64), nullable=True),
    sa.Column('naan', sa.String(length=64), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('term_string', sa.Text(), nullable=True),
    sa.Column('definition', sa.Text(), nullable=True),
    sa.Column('examples', sa.Text(), nullable=True),
    sa.Column('concept_id', sa.String(length=64), nullable=True),
    sa.Column('status', sa.Enum('archived', 'published', 'draft', name='status'), nullable=True),
    sa.Column('class', sa.Enum('vernacular', 'canonical', 'deprecated', name='term_class'), nullable=True),
    sa.Column('tsv', postgresql.TSVECTOR(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ark_id')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('term_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('modified', sa.DateTime(), nullable=True),
    sa.Column('comment_string', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['terms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('relationships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=True),
    sa.Column('predicate', sa.String(length=64), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['terms.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['terms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('term_tags',
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('term_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['terms.id'], )
    )
    op.create_table('tracking',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('term_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['term_id'], ['terms.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'term_id')
    )
    op.create_table('votes',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('term_id', sa.Integer(), nullable=False),
    sa.Column('vote', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['term_id'], ['terms.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'term_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('votes')
    op.drop_table('tracking')
    op.drop_table('term_tags')
    op.drop_table('relationships')
    op.drop_table('comments')
    op.drop_table('terms')
    op.drop_table('tags')
    op.drop_table('users')
    # ### end Alembic commands ###
